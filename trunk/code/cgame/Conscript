# cgame building
# builds the cgame for Smokin' Guns SA

# there are slight differences between Q3 and SA build:
#   -DMISSIONPACK -DSMOKINGUNS and/or -DSMOKINGUNS_SO
#   SA has cg_newdraw.c and ../ui/ui_shared.c

# qvm building against native:
# only native has cg_syscalls.c
# only qvm has ../game/bg_lib.c
# qvm uses a custom cg_syscalls.asm with equ stubs

Import qw( BASE_CFLAGS INSTALL_DIR NO_VM NO_SO CC CXX LINK force32bits cpu);

$OS = `uname`;
chomp($OS);

if ($OS eq 'Linux') {
  $_LDFLAGS = '-shared -ldl -lm';
}
else {
  $_LDFLAGS = '-shared -lm';
}
# Take care to build 32 bits by default when we're compiling on x86_64 systems
$_LDFLAGS .= ' -m32' if ( $force32bits );

# for SA, use -DMISSIONPACK and -DSMOKINGUNS_SO
$sa_env = new cons(
  CPPPATH => '#cgame:#game:#ui',
  CC => $CC,
  CXX => $CXX,
  LINK => $LINK,
	ENV => { PATH => $ENV{PATH}, HOME => $ENV{HOME} },
  CFLAGS => '-DMISSIONPACK -DSMOKINGUNS_SO ' . $BASE_CFLAGS . '-fPIC',
  LDFLAGS => $_LDFLAGS
);

# SA qvm building
# we heavily customize the cons environment
$vm_sa_env = new cons(
  CPPPATH => '#cgame:#game:#ui',
  CC => 'q3lcc',
  CCCOM => '%CC %CFLAGS %_IFLAGS -c %< -o %>',
  SUFOBJ => '.asm',
  LINK => 'q3asm',
  CFLAGS => '-DMISSIONPACK -DSMOKINGUNS -DQ3_VM -DVM_CGAME -S -Wf-target=bytecode -Wf-g',
  # need to know where to find the compiler tools
  ENV => { PATH => $ENV{PATH} . ":../build/qvmtools", },
);

# the file with vmMain function MUST be the first one of the list
@FILES = qw(
  cg_main.c
  ../game/bg_misc.c
  ../game/bg_pmove.c
  ../game/bg_slidemove.c
  ../game/q_math.c
  ../game/q_shared.c
  cg_consolecmds.c  
  cg_draw.c
  cg_drawtools.c
  cg_effects.c
  cg_ents.c
  cg_event.c
  cg_info.c
  cg_localents.c
  cg_marks.c
  cg_players.c
  cg_playerstate.c
  cg_predict.c
  cg_scoreboard.c
  cg_servercmds.c
  cg_snapshot.c
  cg_view.c
  cg_weapons.c
  cg_sg_utils.c
  cg_unlagged.c
  );
$FILESREF = \@FILES;

# only in .so
# (VM uses a custom .asm with equ stubs)
@SO_FILES = qw(
  cg_syscalls.c
  );
$SO_FILESREF = \@SO_FILES;
  
# only for VM
@VM_FILES = qw(
  ../game/bg_lib.c
  cg_syscalls.asm
  );
$VM_FILESREF = \@VM_FILES;  

# common additionals for SA
@SA_FILES = qw(
  cg_newDraw.c
  ../ui/ui_shared.c
  );
$SA_FILESREF = \@SA_FILES;

if ($NO_SO eq 0)
{
	Program $sa_env "cgame$cpu.so",
		@$FILESREF, @$SO_FILESREF, @$SA_FILESREF;
	Install $sa_env $INSTALL_DIR, "cgame$cpu.so";
}

if ($NO_VM eq 0)
{
	############################################################################
	# q3lcc and q3asm should be in your PATH
	############################################################################
	Depends $vm_sa_env 'cgame.qvm', '#../build/qvmtools/q3lcc';
	Depends $vm_sa_env 'cgame.qvm', '#../build/qvmtools/q3asm';
	Program $vm_sa_env 'cgame.qvm', 
		@$FILESREF, @$VM_FILESREF, @$SA_FILESREF;
	Install $vm_sa_env $INSTALL_DIR . '/vm', 'cgame.qvm';
}	
